---
- name: mariadb configuration
  hosts: VM
  become: yes
  vars:
      mariadb_root_password: 'root'
      mariadb_socket: '/var/run/mysqld/mysqld.sock'

  tasks:
    - name: Install mariadb
      tags: ["mariadb"]
      pacman:
        state: present
        name:
          - mariadb
          - python-pymysql

    - name: Count files in /var/lib/mysql
      find: path=/var/lib/mysql patterns="*"
      register: db_files

    - name: Run mariadb-install-db only if /var/lib/mysql is empty
      command: mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
      when: db_files.matched|int == 0

    - name: Start mariadb
      service:
        name: mariadb
        state: started

    # This command will exit non-zero when the root password was set previously
    - name: Check if root password is unset
      shell: >
        mysql -u root
        -p'{{ mariadb_root_password }}'
        -h localhost
        -S {{ mariadb_socket }}
        -e "quit"
      changed_when: false
      ignore_errors: true
      register: root_pwd_check
      tags: mariadb

    # Repeat runs with the same password can continue idempotently, otherwise fail.
    - name: Check if the specified root password is already set
      shell: >
        mysqladmin -u root -p{{ mariadb_root_password }} status
      changed_when: false
      no_log: true
      when: root_pwd_check.rc != 0
      tags: mariadb

    - name: Set mysql root password
      mysql_user:
        name: root
        password: "{{ mariadb_root_password }}"
        login_unix_socket: "{{ mariadb_socket }}"
      when: root_pwd_check.rc != 0

    #- name: Check for previously set unix_socket in plugin column
    #  command: >
    #    mysql -N -s -S {{ mariadb_socket }} -u root -e
    #    "SELECT plugin from mysql.user WHERE user = 'root'"
    #  register: plugin_root_result
    #  changed_when: plugin_root_result.stdout is search('unix_socket')
    #  when: root_pwd_check.rc == 0
    #  tags: mariadb

    - name: Set MariaDB root password for the first time (root@localhost)
      mysql_user:
        name: root
        password: "{{ mariadb_root_password }}"
        host: localhost
        login_unix_socket: "{{ mariadb_socket }}"
        state: present
      when: root_pwd_check.rc != 0
      tags: mariadb

    #- name: Remove unix_socket plugin if previously set
    #  command: >
    #    mysql -S {{ mariadb_socket }} -u root -e
    #    "UPDATE mysql.user SET plugin = '' WHERE user = 'root'; FLUSH PRIVILEGES;"
    #  when:
    #    - root_pwd_check.rc == 0
    #    - plugin_root_result.stdout is search('unix_socket')
    #  tags: mariadb



#    - name: Create test table
#      command: mysql -u root -p root -h localhost --skip-column-names --execute "create table test1 (Name VARCHAR(25),ID INT)"

#    - name: Create a new database with name 'testdata'
#      mysql_db:
#        name: testdata
#        state: present
#        login_user: root
#        login_password: "{{ mariadb_root_password }}"



    - name: Copy sakila-db files
      ansible.builtin.copy:
        src: "~/Documents/Bachelors/sakila-db/sakila-schema.sql"
        dest: "~/sakila-schema.sql"
        owner: test
        mode: '0644'

    - name: Copy sakila-db files
      ansible.builtin.copy:
        src: "~/Documents/Bachelors/sakila-db/sakila-data.sql"
        dest: "~/sakila-data.sql"
        owner: test
        mode: '0644'




    - name: Import sakila database
      mysql_db:
        state: import
        name: all
        target: ~/sakila-schema.sql
        login_user: root
        login_password: "{{ mariadb_root_password }}"

    - name: Import sakila database
      mysql_db:
        state: import
        name: all
        target: ~/sakila-data.sql
        login_user: root
        login_password: "{{ mariadb_root_password }}"